package day1.time_0212_1347;

/**
 * 二进制中1的个数
 * 负数用补码表示
 * 补码：负数的补码是它的正数的反码+1
 * 比如 -2 首先是2的二进制表示为 0000000...0010 ；2的反码为1 111111111...111101，补码为：1 111111...11110;
 */
public class NumberOf1 {

    /**
     * 这道题的思路：
     * 比如整数n的二进制为   1100110，那么n&(n-1) = 1100110 & 1100101 = 1100100 这就干掉了n中的最后一个1
     * 然后继续            1100100，那么n&(n-1) = 1100100 & 1100011 = 1100000 又干掉了n中的最后一个1
     * @param n
     * @return
     */
    public int NumberOf1(int n) {
        int count = 0;
        while (n != 0) {
            count++;
            n = n & (n - 1);
        }
        return count;
    }
}
